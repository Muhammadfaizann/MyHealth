// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;

using MyHealthDB;
using MyHealthDB.Logger;

namespace RCSI
{
	public partial class FeedbackController : UIViewController
	{
		public FeedbackController (IntPtr handle) : base (handle)
		{
		}

		public async override void ViewDidLoad() {
			base.ViewDidLoad ();
			await LogManager.Log<LogUsage> (new LogUsage (){ 
				Date = DateTime.Now, 
				Page = Convert.ToInt32(Pages.Feedback)
			});

			var textFieldDelegate = new FeedbackTexTFieldDelegate (this);
			username.Delegate = textFieldDelegate;
			useremail.Delegate = textFieldDelegate;
			usermessage.Delegate = textFieldDelegate;

			alertDelegate = new FeedbackAlertViewDelegate(this);
		}

		FeedbackAlertViewDelegate alertDelegate;
		async partial void saveTheFeeback (UIButton sender)
		{
			if (username.Text.Equals("") || useremail.Text.Equals("") || usermessage.Text.Equals(""))
			{
				var alert =  new UIAlertView("Error", "Please fill in all the details", null, "Ok", null);
				alert.Show();
			} else {
				await LogManager.Log(new LogFeedback {
					Date = DateTime.Now, 
					FeedbackText = string.Format("<name>{0}<name><email>{1}</email><message>{2}</message>", username.Text, useremail.Text, usermessage.Text)
				});

				UIAlertView _alert = new UIAlertView(null, "Thank you for your feedback",
					alertDelegate, "Ok", null);
				_alert.Show();
			}
		}

		public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
		{
			base.PrepareForSegue (segue, sender);

			if (segue.Identifier == "TextFields") {
				var feedbackTable = (FeedbackTableViewController)segue.DestinationViewController;

				var ftView = feedbackTable.View;

				username = feedbackTable.txtUserName;
				useremail = feedbackTable.txtEmail;
				usermessage = feedbackTable.txtMessage;
			}
		}

		private class FeedbackTexTFieldDelegate : UITextFieldDelegate
		{
			FeedbackController _controller;
			public FeedbackTexTFieldDelegate (FeedbackController controller)
			{
				_controller = controller;
			}

			#region [TextField Delegate Methods]

			// handling keyborad return and done key press event to hide keyboard
			[Export ("textFieldShouldReturn:")]
			public bool ShouldReturn (UIKit.UITextField textField)
			{
				textField.ResignFirstResponder();
				if (textField == _controller.username) {
					_controller.useremail.BecomeFirstResponder ();
				} else if (textField == _controller.useremail) {
					_controller.usermessage.BecomeFirstResponder ();
				}
				return false;
			}

			#endregion
		}

		private class FeedbackAlertViewDelegate : UIAlertViewDelegate
		{
			FeedbackController _controller;
			public FeedbackAlertViewDelegate (FeedbackController controller) : base()
			{
				_controller = controller;
			}

			public override void Clicked (UIAlertView alertview, nint buttonIndex)
			{
				if (buttonIndex == 0) {
					// on Ok button press return back to the contact listing screen
					_controller.NavigationController.PopViewController (true);
				}
			}
		}
	}
}
